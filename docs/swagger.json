{
    "swagger": "2.0",
    "info": {
        "description": "Multi-tenant truck management system with real-time tracking",
        "title": "Truck Management API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/branches": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all branches for the company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Get all branches",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Branch"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new branch for the company (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Create a new branch",
                "parameters": [
                    {
                        "description": "Branch data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBranchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/branches/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific branch by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Get a branch by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update branch information (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branches"
                ],
                "summary": "Update a branch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated branch data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBranchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a branch (Admin only)",
                "tags": [
                    "branches"
                ],
                "summary": "Delete a branch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all cargo shipments for the company with filtering options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get cargo list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by cargo type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by truck ID",
                        "name": "truck_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter assigned/unassigned cargo",
                        "name": "assigned",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in title, tracking number, or description",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new cargo shipment to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Create a new cargo",
                "parameters": [
                    {
                        "description": "Cargo data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCargoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Cargo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/track/{tracking_number}": {
            "get": {
                "description": "Retrieve cargo information using tracking number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get cargo by tracking number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tracking Number",
                        "name": "tracking_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cargo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/track/{tracking_number}/details": {
            "get": {
                "description": "Get comprehensive tracking information including progress and ETA",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get detailed cargo tracking info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tracking Number",
                        "name": "tracking_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CargoTrackingResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/trucks/{truck_id}/cargo": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all cargo shipments assigned to a specific truck",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get cargo assigned to truck",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "truck_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Cargo"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/trucks/{truck_id}/nearby-cargo": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get cargo near truck's current location for efficient pickup routing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get nearby cargo for pickup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "truck_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "format": "float64",
                        "default": 10,
                        "description": "Search radius in kilometers",
                        "name": "radius",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Cargo"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/unassigned": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all cargo that hasn't been assigned to any truck",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get unassigned cargo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Cargo"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific cargo shipment by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get a cargo by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cargo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update cargo shipment information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Update a cargo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated cargo data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCargoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cargo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a cargo shipment from the system",
                "tags": [
                    "cargo"
                ],
                "summary": "Delete a cargo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/{id}/assign": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign a cargo shipment to a specific truck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Assign cargo to truck",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assignment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AssignCargoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cargo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/{id}/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get tracking history for a specific cargo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get cargo events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CargoEvent"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new event to cargo tracking history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Create cargo event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCargoEventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CargoEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/{id}/location": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the current GPS location of cargo during transit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Update cargo real-time location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCargoLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cargo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/{id}/route": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the complete route history with GPS coordinates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cargo"
                ],
                "summary": "Get cargo route history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CargoEvent"
                            }
                        }
                    }
                }
            }
        },
        "/cargo/{id}/unassign": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove cargo assignment from truck",
                "tags": [
                    "cargo"
                ],
                "summary": "Unassign cargo from truck",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cargo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cargo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all companies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get all companies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Company"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new company for multi-tenant system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Create a new company",
                "parameters": [
                    {
                        "description": "Company data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific company by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get a company by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Company"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update company information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Update a company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated company data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a company and all associated data",
                "tags": [
                    "companies"
                ],
                "summary": "Delete a company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/requests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all requests for the company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Get requests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Request"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submit a new request (truck assignment, maintenance, etc.)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Create a new request",
                "parameters": [
                    {
                        "description": "Request data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Request"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/requests/{id}/accept": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accept a pending request (assignee only)",
                "tags": [
                    "requests"
                ],
                "summary": "Accept a request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Request"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/requests/{id}/terminate": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Terminate a request with a reason (assignee only)",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Terminate a request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Termination reason",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TerminateRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Request"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/route-stops/{id}/complete": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a route stop as completed (Driver only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Complete a route stop",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route Stop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Completion notes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RouteStop"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/routes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all routes (drivers see only their routes)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Get routes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by truck ID",
                        "name": "truck_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by driver ID",
                        "name": "driver_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by branch ID",
                        "name": "branch_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new route (Assignee only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Create a new route",
                "parameters": [
                    {
                        "description": "Route data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/routes/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific route by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Get a route by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Route"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update route information (Assignee only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Update a route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated route data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a route (Assignee only)",
                "tags": [
                    "routes"
                ],
                "summary": "Delete a route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/routes/{id}/approve": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Approve a route and make it active (Assignee only)",
                "tags": [
                    "routes"
                ],
                "summary": "Approve a route",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Route"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/routes/{id}/stops": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all stops for a route",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Get route stops",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RouteStop"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a stop to a route (Assignee only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "routes"
                ],
                "summary": "Create a route stop",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Route stop data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateRouteStopRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.RouteStop"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all tasks for a specific visit",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get tasks by visit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Visit ID",
                        "name": "visit_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new task to a visit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific task by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update task information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated task data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{id}/complete": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a task as completed",
                "tags": [
                    "tasks"
                ],
                "summary": "Complete a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/trucks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all trucks for the company with filtering options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Get trucks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by branch ID",
                        "name": "branch_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by driver ID",
                        "name": "driver_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter online trucks only",
                        "name": "online",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter approved trucks only",
                        "name": "approved",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new truck to the company fleet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Create a new truck",
                "parameters": [
                    {
                        "description": "Truck data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTruckRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Truck"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/trucks/my-truck": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the truck assigned to the current driver",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Get driver's assigned truck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Truck"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/trucks/online": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all trucks that are currently online",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Get online trucks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Truck"
                            }
                        }
                    }
                }
            }
        },
        "/trucks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific truck by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Get a truck by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Truck"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update truck information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Update a truck",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated truck data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateTruckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Truck"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a truck from the fleet",
                "tags": [
                    "trucks"
                ],
                "summary": "Delete a truck",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/trucks/{id}/approve": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Approve a truck for operation (Assignee only)",
                "tags": [
                    "trucks"
                ],
                "summary": "Approve a truck",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Truck"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/trucks/{id}/location": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the real-time location of a truck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trucks"
                ],
                "summary": "Update truck location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LocationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users for the company (Admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/drivers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all drivers for the company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all drivers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{driver_id}/assign-truck": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Assign a truck to a driver (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Assign truck to driver",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver ID",
                        "name": "driver_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Truck assignment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific user by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user (Admin only)",
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/visits": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all visits for the company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "visits"
                ],
                "summary": "Get visits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Visit"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new customer visit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "visits"
                ],
                "summary": "Create a new visit",
                "parameters": [
                    {
                        "description": "Visit data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateVisitRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Visit"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/visits/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific visit by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "visits"
                ],
                "summary": "Get a visit by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Visit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Visit"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the status of a visit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "visits"
                ],
                "summary": "Update visit status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Visit ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "pending",
                            "in_progress",
                            "completed",
                            "cancelled"
                        ],
                        "type": "string",
                        "description": "New status",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Visit"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Establish WebSocket connection for real-time updates",
                "tags": [
                    "websocket"
                ],
                "summary": "WebSocket connection",
                "responses": {
                    "101": {
                        "description": "Switching Protocols"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AssignCargoRequest": {
            "type": "object",
            "required": [
                "truck_id"
            ],
            "properties": {
                "truck_id": {
                    "type": "integer"
                }
            }
        },
        "models.Branch": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "manager": {
                    "$ref": "#/definitions/models.User"
                },
                "manager_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "trucks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Truck"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Cargo": {
            "type": "object",
            "properties": {
                "actual_delivery": {
                    "type": "string"
                },
                "actual_pickup": {
                    "type": "string"
                },
                "assigned_at": {
                    "type": "string"
                },
                "assigned_by": {
                    "description": "Assignment details",
                    "type": "integer"
                },
                "assigned_by_user": {
                    "$ref": "#/definitions/models.User"
                },
                "cargo_events": {
                    "description": "Tracking",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CargoEvent"
                    }
                },
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "current_latitude": {
                    "description": "Real-time tracking",
                    "type": "number"
                },
                "current_location": {
                    "type": "string"
                },
                "current_longitude": {
                    "type": "number"
                },
                "delivery_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination_address": {
                    "description": "Destination details",
                    "type": "string"
                },
                "destination_contact": {
                    "type": "string"
                },
                "destination_latitude": {
                    "type": "number"
                },
                "destination_longitude": {
                    "type": "number"
                },
                "destination_phone": {
                    "type": "string"
                },
                "estimated_delivery": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instructions": {
                    "description": "Special instructions",
                    "type": "string"
                },
                "last_updated": {
                    "type": "string"
                },
                "origin_address": {
                    "description": "Origin details",
                    "type": "string"
                },
                "origin_contact": {
                    "type": "string"
                },
                "origin_latitude": {
                    "type": "number"
                },
                "origin_longitude": {
                    "type": "number"
                },
                "origin_phone": {
                    "type": "string"
                },
                "pickup_time": {
                    "description": "Timing",
                    "type": "string"
                },
                "priority": {
                    "$ref": "#/definitions/models.CargoPriority"
                },
                "special_handling": {
                    "type": "boolean"
                },
                "status": {
                    "$ref": "#/definitions/models.CargoStatus"
                },
                "title": {
                    "type": "string"
                },
                "tracking_number": {
                    "type": "string"
                },
                "truck": {
                    "$ref": "#/definitions/models.Truck"
                },
                "truck_id": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.CargoType"
                },
                "updated_at": {
                    "type": "string"
                },
                "value": {
                    "description": "monetary value",
                    "type": "number"
                },
                "volume": {
                    "description": "in cubic meters",
                    "type": "number"
                },
                "weight": {
                    "description": "in kg",
                    "type": "number"
                }
            }
        },
        "models.CargoEvent": {
            "type": "object",
            "properties": {
                "cargo": {
                    "$ref": "#/definitions/models.Cargo"
                },
                "cargo_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "event_type": {
                    "description": "pickup, delivery, status_change, location_update",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "location": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.CargoPriority": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "urgent"
            ],
            "x-enum-varnames": [
                "CargoPriorityLow",
                "CargoPriorityMedium",
                "CargoPriorityHigh",
                "CargoPriorityUrgent"
            ]
        },
        "models.CargoStatus": {
            "type": "string",
            "enum": [
                "pending",
                "assigned",
                "in_transit",
                "delivered",
                "cancelled"
            ],
            "x-enum-varnames": [
                "CargoStatusPending",
                "CargoStatusAssigned",
                "CargoStatusInTransit",
                "CargoStatusDelivered",
                "CargoStatusCancelled"
            ]
        },
        "models.CargoTrackingResponse": {
            "type": "object",
            "properties": {
                "cargo": {
                    "$ref": "#/definitions/models.Cargo"
                },
                "current_status": {
                    "type": "string"
                },
                "estimated_eta": {
                    "type": "string"
                },
                "last_update": {
                    "type": "string"
                },
                "progress": {
                    "description": "0-100%",
                    "type": "number"
                },
                "recent_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CargoEvent"
                    }
                },
                "truck_location": {
                    "$ref": "#/definitions/models.TruckLocation"
                }
            }
        },
        "models.CargoType": {
            "type": "string",
            "enum": [
                "general",
                "fragile",
                "hazardous",
                "perishable",
                "liquid",
                "oversized"
            ],
            "x-enum-varnames": [
                "CargoTypeGeneral",
                "CargoTypeFragile",
                "CargoTypeHazardous",
                "CargoTypePerishable",
                "CargoTypeLiquid",
                "CargoTypeOversized"
            ]
        },
        "models.Company": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "trucks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Truck"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.CreateBranchRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "manager_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.CreateCargoEventRequest": {
            "type": "object",
            "required": [
                "event_type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "location": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "models.CreateCargoRequest": {
            "type": "object",
            "required": [
                "destination_address",
                "origin_address",
                "title",
                "weight"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "delivery_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination_address": {
                    "type": "string"
                },
                "destination_contact": {
                    "type": "string"
                },
                "destination_latitude": {
                    "type": "number"
                },
                "destination_longitude": {
                    "type": "number"
                },
                "destination_phone": {
                    "type": "string"
                },
                "estimated_delivery": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "origin_address": {
                    "type": "string"
                },
                "origin_contact": {
                    "type": "string"
                },
                "origin_latitude": {
                    "type": "number"
                },
                "origin_longitude": {
                    "type": "number"
                },
                "origin_phone": {
                    "type": "string"
                },
                "pickup_time": {
                    "type": "string"
                },
                "priority": {
                    "$ref": "#/definitions/models.CargoPriority"
                },
                "special_handling": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.CargoType"
                },
                "value": {
                    "type": "number"
                },
                "volume": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "models.CreateCompanyRequest": {
            "type": "object",
            "required": [
                "license",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.CreateRequestRequest": {
            "type": "object",
            "required": [
                "title",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "truck_id": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.RequestType"
                }
            }
        },
        "models.CreateRouteRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "models.CreateRouteStopRequest": {
            "type": "object",
            "required": [
                "address",
                "stop_order"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "contact_phone": {
                    "type": "string"
                },
                "estimated_arrival": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "stop_order": {
                    "type": "integer"
                }
            }
        },
        "models.CreateTaskRequest": {
            "type": "object",
            "required": [
                "title",
                "visit_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "visit_id": {
                    "type": "integer"
                }
            }
        },
        "models.CreateTruckRequest": {
            "type": "object",
            "required": [
                "license_plate",
                "model",
                "year"
            ],
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "license_plate": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "role"
            ],
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "truck_id": {
                    "type": "integer"
                }
            }
        },
        "models.CreateVisitRequest": {
            "type": "object",
            "required": [
                "address",
                "customer_name",
                "driver_id",
                "truck_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "notes": {
                    "type": "string"
                },
                "truck_id": {
                    "type": "integer"
                }
            }
        },
        "models.LocationUpdateRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longitude"
            ],
            "properties": {
                "heading": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password"
            ],
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "company_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "models.Request": {
            "type": "object",
            "properties": {
                "accepted_at": {
                    "type": "string"
                },
                "accepted_by": {
                    "type": "integer"
                },
                "accepted_by_user": {
                    "$ref": "#/definitions/models.User"
                },
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.RequestStatus"
                },
                "terminated_at": {
                    "type": "string"
                },
                "terminated_by": {
                    "type": "integer"
                },
                "terminated_by_user": {
                    "$ref": "#/definitions/models.User"
                },
                "termination_reason": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "truck": {
                    "$ref": "#/definitions/models.Truck"
                },
                "truck_id": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.RequestType"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.RequestStatus": {
            "type": "string",
            "enum": [
                "pending",
                "accepted",
                "terminated"
            ],
            "x-enum-varnames": [
                "RequestStatusPending",
                "RequestStatusAccepted",
                "RequestStatusTerminated"
            ]
        },
        "models.RequestType": {
            "type": "string",
            "enum": [
                "truck_assignment",
                "maintenance",
                "leave",
                "other"
            ],
            "x-enum-varnames": [
                "RequestTypeTruckAssignment",
                "RequestTypeMaintenace",
                "RequestTypeLeave",
                "RequestTypeOther"
            ]
        },
        "models.Route": {
            "type": "object",
            "properties": {
                "approved_at": {
                    "type": "string"
                },
                "approved_by": {
                    "type": "integer"
                },
                "approved_by_user": {
                    "$ref": "#/definitions/models.User"
                },
                "branch": {
                    "$ref": "#/definitions/models.Branch"
                },
                "branch_id": {
                    "type": "integer"
                },
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "created_by_user": {
                    "$ref": "#/definitions/models.User"
                },
                "description": {
                    "type": "string"
                },
                "driver": {
                    "$ref": "#/definitions/models.User"
                },
                "driver_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "route_stops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RouteStop"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.RouteStatus"
                },
                "truck": {
                    "$ref": "#/definitions/models.Truck"
                },
                "truck_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.RouteStatus": {
            "type": "string",
            "enum": [
                "draft",
                "active",
                "completed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "RouteStatusDraft",
                "RouteStatusActive",
                "RouteStatusCompleted",
                "RouteStatusCancelled"
            ]
        },
        "models.RouteStop": {
            "type": "object",
            "properties": {
                "actual_arrival": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "completed_at": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "contact_phone": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "estimated_arrival": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "notes": {
                    "type": "string"
                },
                "route": {
                    "$ref": "#/definitions/models.Route"
                },
                "route_id": {
                    "type": "integer"
                },
                "stop_order": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_completed": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visit": {
                    "$ref": "#/definitions/models.Visit"
                },
                "visit_id": {
                    "type": "integer"
                }
            }
        },
        "models.TerminateRequestRequest": {
            "type": "object",
            "required": [
                "reason"
            ],
            "properties": {
                "reason": {
                    "type": "string"
                }
            }
        },
        "models.Truck": {
            "type": "object",
            "properties": {
                "approved_at": {
                    "type": "string"
                },
                "approved_by": {
                    "type": "integer"
                },
                "approved_by_user": {
                    "$ref": "#/definitions/models.User"
                },
                "branch": {
                    "$ref": "#/definitions/models.Branch"
                },
                "branch_id": {
                    "type": "integer"
                },
                "color": {
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "driver": {
                    "$ref": "#/definitions/models.User"
                },
                "driver_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_approved": {
                    "type": "boolean"
                },
                "last_location": {
                    "$ref": "#/definitions/models.TruckLocation"
                },
                "license_plate": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TruckLocation"
                    }
                },
                "model": {
                    "type": "string"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Route"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.TruckStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "visits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Visit"
                    }
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.TruckLocation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "heading": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "truck": {
                    "$ref": "#/definitions/models.Truck"
                },
                "truck_id": {
                    "type": "integer"
                }
            }
        },
        "models.TruckStatus": {
            "type": "string",
            "enum": [
                "online",
                "offline",
                "in_use",
                "maintenance"
            ],
            "x-enum-varnames": [
                "TruckStatusOnline",
                "TruckStatusOffline",
                "TruckStatusInUse",
                "TruckStatusMaintenance"
            ]
        },
        "models.UpdateBranchRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "manager_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCargoLocationRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longitude"
            ],
            "properties": {
                "heading": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "location": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                }
            }
        },
        "models.UpdateCargoRequest": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "delivery_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination_address": {
                    "type": "string"
                },
                "destination_contact": {
                    "type": "string"
                },
                "destination_latitude": {
                    "type": "number"
                },
                "destination_longitude": {
                    "type": "number"
                },
                "destination_phone": {
                    "type": "string"
                },
                "estimated_delivery": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "origin_address": {
                    "type": "string"
                },
                "origin_contact": {
                    "type": "string"
                },
                "origin_latitude": {
                    "type": "number"
                },
                "origin_longitude": {
                    "type": "number"
                },
                "origin_phone": {
                    "type": "string"
                },
                "pickup_time": {
                    "type": "string"
                },
                "priority": {
                    "$ref": "#/definitions/models.CargoPriority"
                },
                "special_handling": {
                    "type": "boolean"
                },
                "status": {
                    "$ref": "#/definitions/models.CargoStatus"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.CargoType"
                },
                "value": {
                    "type": "number"
                },
                "volume": {
                    "type": "number"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "models.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.UpdateRouteRequest": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.RouteStatus"
                },
                "truck_id": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateTruckRequest": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "is_approved": {
                    "type": "boolean"
                },
                "license_plate": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.TruckStatus"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "truck_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/definitions/models.Branch"
                },
                "branch_id": {
                    "type": "integer"
                },
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                },
                "truck": {
                    "$ref": "#/definitions/models.Truck"
                },
                "truck_id": {
                    "description": "For drivers assigned to specific truck",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "assignee",
                "driver",
                "draft"
            ],
            "x-enum-varnames": [
                "RoleAdmin",
                "RoleAssignee",
                "RoleDriver",
                "RoleDraft"
            ]
        },
        "models.Visit": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "driver": {
                    "$ref": "#/definitions/models.User"
                },
                "driver_id": {
                    "type": "integer"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "notes": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.VisitStatus"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Task"
                    }
                },
                "truck": {
                    "$ref": "#/definitions/models.Truck"
                },
                "truck_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.VisitStatus": {
            "type": "string",
            "enum": [
                "pending",
                "in_progress",
                "completed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "VisitStatusPending",
                "VisitStatusInProgress",
                "VisitStatusCompleted",
                "VisitStatusCancelled"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}